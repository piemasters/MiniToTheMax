// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostSummary renders correctly 1`] = `
<div>
  <div
    css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
    data-testid="post-summary"
  >
    <a
      bg="#eb1d23"
      css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
      data-testid="page-link-cover"
      direction="up"
      duration="1"
      href="/slug"
    >
      <div
        css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
        data-testid="cover-image"
      >
        <div
          class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
          data-gatsby-image-wrapper=""
          style="position: relative; overflow: hidden; display: inline-block;"
        >
          <div
            style="max-width: 1800px; display: block;"
          >
            <img
              alt=""
              aria-hidden="true"
              role="presentation"
              src="data:image/svg+xml;charset=utf-8,%3Csvg height='900' width='1800' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E"
              style="max-width: 100%; display: block; position: static;"
            />
          </div>
          <div
            aria-hidden="true"
            data-placeholder-image=""
            style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
          />
          <img
            alt="test"
            css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
            data-gatsby-image-ssr=""
            data-main-image=""
            data-src="cover.jpeg"
            decoding="async"
            loading="lazy"
            style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; opacity: 0;"
          />
          <noscript />
          <script
            type="module"
          >
            const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t)e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset")),e.complete&&(e.style.opacity=1)}
          </script>
        </div>
        <h2
          css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
        >
          Demo Post Title
        </h2>
      </div>
      <div
        css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
      >
         
        <p
          css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
        >
          <strong>
            11/01/2019
             - 
            5
             min read
          </strong>
        </p>
        <hr />
        <p
          css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
        >
          A test sentence
        </p>
      </div>
    </a>
  </div>
</div>
`;
